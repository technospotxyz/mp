I found Practical 8 in your file. Here’s the extracted code and steps:


---

Practical 8

Aim

To demonstrate Database connectivity.

Objective

Build a simple Android app that allows users to add, store, and view notes using Firebase Realtime Database. Notes update instantly in real time.


---

Code

Java (MainActivity.java)

package com.example.loginpage;

import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {
    EditText etNote;
    Button btnAddNote;
    ListView listViewNotes;
    ArrayList<String> notesList;
    ArrayAdapter<String> adapter;
    DatabaseReference databaseNotes;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        databaseNotes = FirebaseDatabase.getInstance().getReference("notes");

        etNote = findViewById(R.id.etNote);
        btnAddNote = findViewById(R.id.btnAddNote);
        listViewNotes = findViewById(R.id.listViewNotes);

        notesList = new ArrayList<>();
        adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, notesList);
        listViewNotes.setAdapter(adapter);

        btnAddNote.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                addNote();
            }
        });
    }

    @Override
    protected void onStart() {
        super.onStart();
        databaseNotes.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                notesList.clear();
                for (DataSnapshot postSnapshot : dataSnapshot.getChildren()) {
                    String note = postSnapshot.getValue(String.class);
                    notesList.add(note);
                }
                adapter.notifyDataSetChanged();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {
                Toast.makeText(MainActivity.this, "Failed to load notes.", Toast.LENGTH_SHORT).show();
            }
        });
    }

    private void addNote() {
        String note = etNote.getText().toString().trim();
        if (!TextUtils.isEmpty(note)) {
            String id = databaseNotes.push().getKey();
            databaseNotes.child(id).setValue(note);
            Toast.makeText(this, "Note added", Toast.LENGTH_LONG).show();
            etNote.setText("");
        } else {
            Toast.makeText(this, "Please enter a note", Toast.LENGTH_LONG).show();
        }
    }
}


---

XML (activity_main.xml)

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/etNote"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter a new note"
        android:inputType="text"/>

    <Button
        android:id="@+id/btnAddNote"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Add Note to Database"
        android:layout_marginTop="8dp"/>

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Notes from Firebase:"
        android:textStyle="bold"
        android:layout_marginTop="16dp"/>

    <ListView
        android:id="@+id/listViewNotes"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="8dp"/>
</LinearLayout>


---

Steps / Method

Frontend (XML Layout)

EditText → To enter new note.

Button → To save note in Firebase.

ListView → To display all notes dynamically.


Backend (Java Activity)

1. Connect to Firebase Database with FirebaseDatabase.getInstance().getReference("notes").


2. Add note: Button click pushes data into Firebase.


3. Retrieve notes: ValueEventListener listens for real-time changes and updates ListView.


4. Used ArrayAdapter to bind notes list to UI.


5. Added validation with TextUtils.isEmpty() to prevent empty notes.




---

Conclusion

This project shows how Firebase can be integrated with Android for real-time data storage and retrieval.

Notes added by users are instantly reflected in the app without a backend server.



---

Do you want me to also extract Practical 7 code and steps along with Practical 8, so you have both together for your record?

